name: "Deploy Infrastructure with Terraform"

on:
  push:
    branches:
      - main
    paths:
      - "infra/**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download Encrypted .tfstate & Decrypt
        uses: badgerhobbs/terraform-state@v2
        with:
          encryption_key: ${{ secrets.TFSTATE_ENCRYPTION_KEY }}
          operation: download
          location: artifact
          github_token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: infra

      - name: Terraform Plan
        run: terraform plan
        working-directory: infra

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: infra

      - name: Encrypt .tfstate & Upload
        uses: badgerhobbs/terraform-state@v2
        with:
          encryption_key: ${{ secrets.TFSTATE_ENCRYPTION_KEY }}
          operation: upload
          location: artifact
          github_token: ${{ secrets.GITHUB_TOKEN }}
